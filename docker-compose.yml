version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: ysi-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-ysi_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-ysi_password}
      POSTGRES_DB: ${POSTGRES_DB:-ysi_db}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - ysi-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ysi_user"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: ysi-redis
    ports:
      - "6379:6379"
    networks:
      - ysi-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./ysi-backend
      dockerfile: Dockerfile
    container_name: ysi-backend
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-ysi_user}:${POSTGRES_PASSWORD:-ysi_password}@postgres:5432/${POSTGRES_DB:-ysi_db}
      REDIS_URL: redis://redis:6379/0
      SECRET_KEY: ${SECRET_KEY:-your-secret-key-here-change-in-production}
      FRONTEND_URL: http://localhost:3000
      BACKEND_URL: http://localhost:8000
    volumes:
      - ./ysi-backend:/app
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - ysi-network
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  frontend:
    build:
      context: ./ysi-admin-frontend
      dockerfile: Dockerfile
    container_name: ysi-frontend
    environment:
      REACT_APP_API_URL: http://localhost:8000/api/v1
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - ysi-network
    volumes:
      - ./ysi-admin-frontend:/app
      - /app/node_modules

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: ysi-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@ysi.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin}
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - ysi-network
    volumes:
      - pgadmin_data:/var/lib/pgadmin

networks:
  ysi-network:
    driver: bridge

volumes:
  postgres_data:
  pgadmin_data: